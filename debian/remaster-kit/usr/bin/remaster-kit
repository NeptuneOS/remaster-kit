#!/bin/bash
# 
#### REMASTER-KIT #####
#  Version 1.8       #
# by Leszek Lesner   #
#######################
# License :   BSD
#
#
source /usr/share/remaster-kit/functions

# Main IF
if [ $# -lt 1 ] || [ $1 = "-help" ] || [ $1 = "-h" ]; then
	help1
else
	if [ $1 = "create" ]; then
		if [ $# -lt 3 ]; then
			help1
		else
			create-project $2 $3
		fi # create arguments if
	fi # create if
	if [ $1 = "open" ]; then
		if [ -d $2 ] 
		then
			$(/usr/bin/magi-kit.py --show filemanager) $2   # If you are above the project directory
		elif [ -d "../${2}" ]
		then
			$(/usr/bin/magi-kit.py --show filemanager) "../${2}" # If you are in the project directory
		fi
	fi # open if
	if [ $1 = "chroot" ]; then 
		chroot_into
	fi # chroot if
        if [ $1 = "chroot-prevent-apt-cache" ]; then 
		APT_CLEAN=false chroot_into
	fi # chroot-prevent-apt-cache if
	if [ $1 = "build" ]; then
		if [ $# -lt 3 ]; then
			help1
		else
			check_if_casper_or_live
			create-squashfs
			create-packagelist
			create-md5sum
                        create-iso $2 $3
		fi # build arguments if
	fi # build if
	if [ $1 = "buildiso" ]; then
		if [ $# -lt 3 ]; then
			help1
		else
			check_if_casper_or_live
			create-md5sum
			create-iso $2 $3
		fi # buildiso arguments if
	fi # buildiso if
	if [ $1 = "hybridiso" ]; then
		if [ $# -lt 2 ]; then
			help1
		else
                        if [ -e extract-cd/boot/grub/efi.img ]; then
				sudo isohybrid --uefi $2; md5sum $2 > $2.md5
                        else 
				sudo isohybrid $2; md5sum $2 > $2.md5
                        fi
		fi # hybridiso arguments if
	fi # hybridiso if
	if [ $1 = "clean" ]; then
		cleanup
	fi # clean if
	if [ $1 = "remove" ]; then
		if [ -d $2 ] 
		then
			sudo rm -ir $2
		elif [ -d "../${2}" ]
		then
			sudo rm -ir "../${2}"
		fi
	fi # remove if
	if [ $1 = "merge" ]; then
		mkdir -p /tmp/remaster-kit-snapshot-merge
		sudo mount -o loop $2 /tmp/remaster-kit-snapshot-merge
                if [ $? != 0 ]; then
		      echo "Error mounting Snapshot"
		      exit -1;
		else
		      echo "===Mounted Snapshot==="
		      echo "===Start merging snapshot...==="
		      sudo rsync -av /tmp/remaster-kit-snapshot-merge/ edit/ --progress
		      if [ $? != 0 ]; then
			      echo "===Error merging Snapshot==="
                              sudo umount /tmp/remaster-kit-snapshot-merge
                              rmdir /tmp/remaster-kit-snapshot-merge
			      exit -1;
		      else
		      echo "===Merged Snapshot==="
		      sudo umount /tmp/remaster-kit-snapshot-merge
                      rmdir /tmp/remaster-kit-snapshot-merge
		      fi # error merging
		fi # error mounting
	fi # merge if      
        if [ $1 = "save-live" ]; then
                if [ $# -gt 1 ]; then
                        sudo rsync --exclude={/media,/live,/var/log,/var/cache,/tmp} -av / $2/edit ;
                        sudo mkdir -p $2/edit/media $2/edit/var/log $2/edit/var/cache $2/edit/tmp;
			if [ "$SQFS" == "lzma" ]; then
				sudo mksquashfs-lzma $2/edit $2/extract-cd/live/filesystem.squashfs -lzma
                        elif [ "$SQFS" == "xz" ]; then
                                sudo mksquashfs $2/edit $2/extract-cd/$VER/filesystem.squashfs -comp xz 
                        elif [ "$SQFS" == "lzo" ]; then
                                sudo mksquashfs $2/edit $2/extract-cd/$VER/filesystem.squashfs -comp lzo 
			else
				sudo mksquashfs $2/edit $2/extract-cd/$VER/filesystem.squashfs
			fi # SQFS if
                        if [ $? != 0 ]; then
		                echo "Error packaging filesystem.squashfs"
		                exit -1;
                        else
			        echo "LiveSystem packed in Filesystem.squashfs"
                        fi # Error if
               else
                        echo -n $0
                        echo " save-live <Projectdirectory> "
               fi # gt1 if
       fi # save-live if
       if [ $1 = "run-script" ]; then
		if [ $# -gt 1 ]; then
			run-script $2
                fi # gt1 if
       fi # run-script if
       if [ $1 = "autobuild" ]; then
		if [ $# -gt 2 ]; then
			autobuild $2 $3
		else 
			echo "Error you need to provide VOLUMENAME and ISONAME!"
		fi # gt2 if
       fi # autobuild if
fi #main if


